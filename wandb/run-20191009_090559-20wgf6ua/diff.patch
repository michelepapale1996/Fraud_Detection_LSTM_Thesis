diff --git a/.idea/workspace.xml b/.idea/workspace.xml
index e836a9b..c8146fd 100644
--- a/.idea/workspace.xml
+++ b/.idea/workspace.xml
@@ -1,7 +1,14 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="782d7ebb-6452-46b8-84e4-cfc81e4c3351" name="Default" comment="" />
+    <list default="true" id="782d7ebb-6452-46b8-84e4-cfc81e4c3351" name="Default" comment="">
+      <change afterPath="$PROJECT_DIR$/LSTM_classificator.py" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/feature_engineering.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Notebooks/bonifici_RF.ipynb" beforeDir="false" afterPath="$PROJECT_DIR$/Notebooks/bonifici_RF.ipynb" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main_LSTM.py" beforeDir="false" afterPath="$PROJECT_DIR$/LSTM_AD.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/models/LSTM.py" beforeDir="false" afterPath="$PROJECT_DIR$/models/LSTM.py" afterDir="false" />
+    </list>
     <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
     <option name="TRACKING_ENABLED" value="true" />
     <option name="SHOW_DIALOG" value="false" />
@@ -10,18 +17,55 @@
     <option name="LAST_RESOLUTION" value="IGNORE" />
   </component>
   <component name="FileEditorManager">
-    <leaf>
+    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
+      <file leaf-file-name="LSTM_AD.py" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/LSTM_AD.py">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="1470">
+              <caret line="98" column="23" selection-start-line="98" selection-start-column="23" selection-end-line="98" selection-end-column="23" />
+              <folding>
+                <element signature="e#0#19#0" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="LSTM_classificator.py" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/LSTM_classificator.py">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="231">
+              <caret line="89" column="53" selection-start-line="89" selection-start-column="53" selection-end-line="89" selection-end-column="53" />
+              <folding>
+                <element signature="e#0#19#0" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file leaf-file-name="feature_engineering.py" pinned="false" current-in-tab="true">
+        <entry file="file://$PROJECT_DIR$/feature_engineering.py">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="393">
+              <caret line="71" lean-forward="true" selection-start-line="71" selection-end-line="71" />
+              <folding>
+                <element signature="e#0#19#0" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
       <file leaf-file-name="config.py" pinned="false" current-in-tab="false">
         <entry file="file://$PROJECT_DIR$/config.py">
           <provider selected="true" editor-type-id="text-editor" />
         </entry>
       </file>
-      <file leaf-file-name="main_LSTM.py" pinned="false" current-in-tab="true">
-        <entry file="file://$PROJECT_DIR$/main_LSTM.py">
+      <file leaf-file-name="LSTM.py" pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/models/LSTM.py">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="-412">
+            <state relative-caret-position="735">
+              <caret line="61" column="59" selection-start-line="61" selection-start-column="59" selection-end-line="61" selection-end-column="59" />
               <folding>
-                <element signature="e#0#19#0" expanded="true" />
+                <element signature="e#0#11#0" expanded="true" />
               </folding>
             </state>
           </provider>
@@ -29,9 +73,27 @@
       </file>
     </leaf>
   </component>
+  <component name="FileTemplateManagerImpl">
+    <option name="RECENT_TEMPLATES">
+      <list>
+        <option value="Python Script" />
+      </list>
+    </option>
+  </component>
   <component name="Git.Settings">
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
+  <component name="IdeDocumentHistory">
+    <option name="CHANGED_PATHS">
+      <list>
+        <option value="$PROJECT_DIR$/models/LSTM.py" />
+        <option value="$PROJECT_DIR$/main_LSTM.py" />
+        <option value="$PROJECT_DIR$/LSTM_classificator.py" />
+        <option value="$PROJECT_DIR$/LSTM_AD.py" />
+        <option value="$PROJECT_DIR$/feature_engineering.py" />
+      </list>
+    </option>
+  </component>
   <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
   <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
   <component name="JsGulpfileManager">
@@ -41,7 +103,7 @@
   <component name="NodePackageJsonFileManager">
     <packageJsonPaths />
   </component>
-  <component name="ProjectFrameBounds">
+  <component name="ProjectFrameBounds" fullScreen="true">
     <option name="y" value="23" />
     <option name="width" value="1321" />
     <option name="height" value="793" />
@@ -51,6 +113,7 @@
       <foldersAlwaysOnTop value="true" />
     </navigator>
     <panes>
+      <pane id="Scope" />
       <pane id="ProjectPane">
         <subPane>
           <expand>
@@ -58,11 +121,20 @@
               <item name="Fraud_Detection_LSTM_Thesis" type="b2602c69:ProjectViewProjectNode" />
               <item name="Fraud_Detection_LSTM_Thesis" type="462c0819:PsiDirectoryNode" />
             </path>
+            <path>
+              <item name="Fraud_Detection_LSTM_Thesis" type="b2602c69:ProjectViewProjectNode" />
+              <item name="Fraud_Detection_LSTM_Thesis" type="462c0819:PsiDirectoryNode" />
+              <item name="datasets" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="Fraud_Detection_LSTM_Thesis" type="b2602c69:ProjectViewProjectNode" />
+              <item name="Fraud_Detection_LSTM_Thesis" type="462c0819:PsiDirectoryNode" />
+              <item name="models" type="462c0819:PsiDirectoryNode" />
+            </path>
           </expand>
           <select />
         </subPane>
       </pane>
-      <pane id="Scope" />
     </panes>
   </component>
   <component name="PropertiesComponent">
@@ -87,7 +159,7 @@
       </list>
     </option>
   </component>
-  <component name="RunManager">
+  <component name="RunManager" selected="Python.feature_engineering">
     <configuration default="true" type="PythonConfigurationType" factoryName="Python">
       <module name="Fraud_Detection_LSTM_Thesis" />
       <option name="INTERPRETER_OPTIONS" value="" />
@@ -107,6 +179,75 @@
       <option name="EMULATE_TERMINAL" value="false" />
       <option name="MODULE_MODE" value="false" />
     </configuration>
+    <configuration name="feature_engineering" type="PythonConfigurationType" factoryName="Python" temporary="true">
+      <module name="Fraud_Detection_LSTM_Thesis" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/feature_engineering.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="true" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+    </configuration>
+    <configuration name="main_LSTM" type="PythonConfigurationType" factoryName="Python" temporary="true">
+      <module name="Fraud_Detection_LSTM_Thesis" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/LSTM_AD.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="true" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+    </configuration>
+    <configuration name="main_RF" type="PythonConfigurationType" factoryName="Python" temporary="true">
+      <module name="Fraud_Detection_LSTM_Thesis" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="IS_MODULE_SDK" value="true" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main_RF.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="true" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+    </configuration>
+    <list>
+      <item itemvalue="Python.main_RF" />
+      <item itemvalue="Python.main_LSTM" />
+      <item itemvalue="Python.feature_engineering" />
+    </list>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Python.feature_engineering" />
+        <item itemvalue="Python.main_LSTM" />
+        <item itemvalue="Python.main_RF" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SvnConfiguration">
     <configuration />
@@ -122,31 +263,55 @@
     <servers />
   </component>
   <component name="ToolWindowManager">
-    <frame x="0" y="23" width="1321" height="793" extended-state="0" />
+    <frame x="0" y="0" width="1440" height="900" extended-state="0" />
     <layout>
       <window_info anchor="bottom" id="TODO" order="6" />
-      <window_info anchor="bottom" id="Event Log" side_tool="true" />
-      <window_info anchor="right" x="0" y="0" width="280" height="593" id="Documentation" side_tool="true" weight="0.32994527" />
-      <window_info anchor="bottom" id="Database Changes" show_stripe_button="false" />
-      <window_info anchor="bottom" id="Run" order="2" />
-      <window_info anchor="bottom" id="Version Control" />
-      <window_info active="true" anchor="bottom" id="Python Console" visible="true" weight="0.32902297" />
-      <window_info anchor="bottom" id="Terminal" />
-      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.13135262" />
-      <window_info anchor="bottom" id="Docker" show_stripe_button="false" />
-      <window_info anchor="right" id="Database" />
-      <window_info anchor="right" id="SciView" />
+      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" />
+      <window_info anchor="right" x="0" y="0" width="310" height="700" id="Documentation" order="5" side_tool="true" weight="0.28540772" />
+      <window_info anchor="bottom" id="Database Changes" order="7" show_stripe_button="false" />
+      <window_info anchor="bottom" id="Version Control" order="7" />
+      <window_info anchor="bottom" id="Python Console" order="7" weight="0.27636364" />
+      <window_info active="true" anchor="bottom" id="Run" order="2" visible="true" weight="0.31878787" />
+      <window_info anchor="bottom" id="Terminal" order="7" weight="0.32969698" />
+      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.123032905" />
+      <window_info anchor="bottom" id="Docker" order="7" show_stripe_button="false" />
+      <window_info anchor="right" id="Database" order="3" />
+      <window_info anchor="right" id="SciView" order="4" />
       <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
+      <window_info id="Favorites" order="2" side_tool="true" />
       <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
-      <window_info id="Favorites" side_tool="true" />
-      <window_info anchor="bottom" id="Find" order="1" />
-      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
       <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
       <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
+      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
       <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
       <window_info anchor="bottom" id="Message" order="0" />
       <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
+      <window_info anchor="bottom" id="Find" order="1" />
     </layout>
+    <layout-to-restore>
+      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
+      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.123032905" />
+      <window_info anchor="bottom" id="Docker" order="7" show_stripe_button="false" />
+      <window_info anchor="bottom" id="Version Control" order="8" />
+      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
+      <window_info anchor="right" id="SciView" order="4" />
+      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
+      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
+      <window_info anchor="bottom" id="TODO" order="6" />
+      <window_info anchor="bottom" id="Database Changes" order="9" show_stripe_button="false" />
+      <window_info anchor="bottom" id="Run" order="2" weight="0.4460606" />
+      <window_info anchor="bottom" id="Find" order="1" />
+      <window_info anchor="bottom" id="Python Console" order="10" weight="0.27636364" />
+      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
+      <window_info anchor="right" x="0" y="0" width="310" height="700" id="Documentation" order="5" side_tool="true" weight="0.28540772" />
+      <window_info anchor="right" id="Database" order="3" />
+      <window_info anchor="bottom" id="Terminal" order="11" weight="0.32969698" />
+      <window_info anchor="bottom" id="Event Log" order="12" side_tool="true" />
+      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
+      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
+      <window_info anchor="bottom" id="Message" order="0" />
+      <window_info id="Favorites" order="2" side_tool="true" />
+    </layout-to-restore>
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="1" />
@@ -158,9 +323,87 @@
     <entry file="file://$PROJECT_DIR$/config.py">
       <provider selected="true" editor-type-id="text-editor" />
     </entry>
-    <entry file="file://$PROJECT_DIR$/main_LSTM.py">
+    <entry file="file://$PROJECT_DIR$/models/LSTM.py">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="735">
+          <caret line="61" column="59" selection-start-line="61" selection-start-column="59" selection-end-line="61" selection-end-column="59" />
+          <folding>
+            <element signature="e#0#11#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/LSTM_AD.py">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="840">
+          <caret line="72" column="2" selection-start-line="72" selection-start-column="2" selection-end-line="72" selection-end-column="2" />
+          <folding>
+            <element signature="e#0#19#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/config.py">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/LSTM_AD.py">
+      <provider selected="true" editor-type-id="text-editor">
+        <state>
+          <folding>
+            <element signature="e#0#19#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/models/LSTM.py">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="735">
+          <caret line="61" column="59" selection-start-line="61" selection-start-column="59" selection-end-line="61" selection-end-column="59" />
+          <folding>
+            <element signature="e#0#11#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/config.py">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/visualization.py">
+      <provider selected="true" editor-type-id="text-editor">
+        <state>
+          <folding>
+            <element signature="e#0#19#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/datasets/bonifici_engineered.csv">
+      <provider selected="true" editor-type-id="LargeFileEditor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/LSTM_classificator.py">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="231">
+          <caret line="89" column="53" selection-start-line="89" selection-start-column="53" selection-end-line="89" selection-end-column="53" />
+          <folding>
+            <element signature="e#0#19#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/LSTM_AD.py">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1470">
+          <caret line="98" column="23" selection-start-line="98" selection-start-column="23" selection-end-line="98" selection-end-column="23" />
+          <folding>
+            <element signature="e#0#19#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/feature_engineering.py">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="-412">
+        <state relative-caret-position="393">
+          <caret line="71" lean-forward="true" selection-start-line="71" selection-end-line="71" />
           <folding>
             <element signature="e#0#19#0" expanded="true" />
           </folding>
diff --git a/main_LSTM.py b/LSTM_AD.py
similarity index 69%
rename from main_LSTM.py
rename to LSTM_AD.py
index 6ee4d2b..2356ace 100644
--- a/main_LSTM.py
+++ b/LSTM_AD.py
@@ -13,6 +13,9 @@ from sklearn.metrics import roc_curve
 from sklearn.metrics import roc_auc_score
 from sklearn.metrics import precision_recall_curve
 from sklearn.model_selection import RandomizedSearchCV
+import wandb
+from wandb.keras import WandbCallback
+wandb.init(project="fraud-detection-thesis")
 
 # in order to print all the columns
 pd.set_option('display.max_columns', 100)
@@ -63,33 +66,8 @@ def create_dataset(dataset, look_back=1):
 
 
 # reading the datasets
-bonifici = pd.read_csv("datasets/quiubi_bonifici.csv")
-# dropping columns with useless data
-bonifici = bonifici.drop(["DataValuta", "DataEsecuzione", "CAP", "Servizio", "Status", "Paese", "Provincia", "Nazione", "IDTransazione", "CRO", "Causale", "Valuta", "ProfSicurezza", "NumConto", "ABI", "CAB", "Intestatario", "Indirizzo"], axis=1)
-bonifici = bonifici.drop(["MsgErrore", "Nominativo", "TipoOperazione"], axis=1)
-bonifici = bonifici[0:1000]
-# ------------------------------ Feature engineering ------------------------------
-print("Feature engineering")
-bonifici.Timestamp = pd.to_datetime(bonifici.Timestamp)
-
-bonifici.NumConfermaSMS = bonifici.NumConfermaSMS.eq('Si').astype(int)
-
-# rescaling "Importo"
-x = bonifici[["Importo"]].to_numpy()
-min_max_scaler = preprocessing.MinMaxScaler()
-x_scaled = min_max_scaler.fit_transform(x)
-bonifici[["Importo"]] = x_scaled
-
-# creating "isItalianSender" and "isItalianReceiver"
-bonifici.loc[:, "isItalianSender"] = np.ones(len(bonifici.index))
-bonifici.loc[:, "isItalianReceiver"] = np.ones(len(bonifici.index))
-for index, row in bonifici[["CC_ASN", "IBAN_CC"]].iterrows():
-    if row["CC_ASN"][:2] != "IT":
-        bonifici.at[index, "isItalianSender"] = 0
-    if row["IBAN_CC"] != "IT":
-        bonifici.at[index, "isItalianReceiver"] = 0
-bonifici["isItalianSender"] = pd.to_numeric(bonifici["isItalianSender"], downcast='integer')
-bonifici["isItalianReceiver"] = pd.to_numeric(bonifici["isItalianReceiver"], downcast='integer')
+bonifici = pd.read_csv("datasets/bonifici_engineered.csv")
+
 
 # --------------------------------- preparing training and test sets-----------------------------
 print("Preparing training and test sets")
@@ -97,8 +75,7 @@ print("Preparing training and test sets")
 bonifici = bonifici.drop(["IDSessione", "IP", "IBAN", "IBAN_CC", "CC_ASN"], axis=1)
 
 train, test = train_test_split(bonifici, test_size=0.1)
-x_train, y_train = create_dataset(train, look_back=50)
-
+x_train, y_train = create_dataset(train, look_back=20)
 x_test, y_test = create_dataset(test, look_back=20)
 
 look_back = cfg.multi_step_lstm_config['look_back']
diff --git a/LSTM_classificator.py b/LSTM_classificator.py
new file mode 100644
index 0000000..8ddc7db
--- /dev/null
+++ b/LSTM_classificator.py
@@ -0,0 +1,100 @@
+import pandas as pd
+import numpy as np
+from sklearn import preprocessing
+import seaborn as sns
+import matplotlib.pyplot as plt
+# seaborn can generate several warnings, we ignore them
+import warnings
+from sklearn.model_selection import train_test_split
+from models import LSTM
+import config as cfg
+from sklearn.metrics import f1_score
+from sklearn.metrics import roc_curve
+from sklearn.metrics import roc_auc_score
+from sklearn.metrics import precision_recall_curve
+from sklearn.model_selection import RandomizedSearchCV
+import wandb
+from wandb.keras import WandbCallback
+wandb.init(project="fraud-detection-thesis")
+
+# in order to print all the columns
+pd.set_option('display.max_columns', 100)
+sns.set(style="white", color_codes=True)
+sns.set_context(rc={"font.family":'sans',"font.size":24,"axes.titlesize":24,"axes.labelsize":24})
+warnings.filterwarnings("ignore")
+
+# -----------------------------------------------------------------------------------------------
+
+# --------------------------Main idea: creating an LSTM classificator ---------------------------
+# The LSTM network is trained using sequences belonging to same user for all users
+
+# -----------------------------------------------------------------------------------------------
+
+IS_MODEL_SELECTION_ON = False
+
+
+def get_series(transactions, look_back):
+    x = []
+    y = []
+    while len(transactions.index) > look_back:
+        x.append(transactions[0:look_back].values.tolist())
+        y.append(transactions[look_back:look_back + 1].values[0]) # there is only one row
+        transactions = transactions[look_back:]
+    return x, y
+
+
+# converting low level dataset to high level
+def create_dataset(dataset, look_back=1):
+    bonifici_by_user = dataset.groupby("UserID")
+    x = []
+    y = []
+
+    # un utente è valido se ha più di lookback transazioni
+    number_of_series = 0
+    number_of_users = 0
+    for user in bonifici_by_user.groups.keys():
+        transactions = bonifici_by_user.get_group(user).sort_values("Timestamp")
+        transactions = transactions.drop(["UserID", "Timestamp", "indice"], axis=1)
+        series_x, series_y = get_series(transactions, look_back)
+        x.extend(series_x)
+        y.extend(series_y)
+        number_of_users += 1
+        number_of_series += len(series_y)
+
+    print("Ci sono " + str(number_of_series) + " serie con " + str(number_of_users) + " utenti.")
+    return np.asarray(x), np.asarray(y)
+
+
+# reading the datasets
+bonifici = pd.read_csv("datasets/bonifici_engineered.csv")
+
+# --------------------------------- preparing training and test sets-----------------------------
+print("Preparing training and test sets")
+
+bonifici = bonifici.drop(["IDSessione", "IP", "IBAN", "IBAN_CC", "CC_ASN"], axis=1)
+
+train, test = train_test_split(bonifici, test_size=0.1)
+x_train, y_train = create_dataset(train, look_back=20)
+x_test, y_test = create_dataset(test, look_back=20)
+
+look_back = cfg.multi_step_lstm_config['look_back']
+look_ahead = cfg.multi_step_lstm_config['look_ahead']
+batch_size = cfg.multi_step_lstm_config['batch_size']
+epochs = cfg.multi_step_lstm_config['n_epochs']
+dropout = cfg.multi_step_lstm_config['dropout']
+layers = cfg.multi_step_lstm_config['layers']
+loss = cfg.multi_step_lstm_config['loss']
+# optimizer = cfg.multi_step_lstm_config['optimizer']
+shuffle = cfg.multi_step_lstm_config['shuffle']
+patience = cfg.multi_step_lstm_config['patience']
+validation = cfg.multi_step_lstm_config['validation']
+learning_rate = cfg.multi_step_lstm_config['learning_rate']
+
+
+# --------------------------------- training LSTM net -----------------------------
+vanilla_lstm = LSTM.VanillaLSTM(look_back=look_back, layers=layers, dropout=dropout, loss=loss, learning_rate=learning_rate)
+model = vanilla_lstm.build_model()
+
+print("Training model...")
+history = LSTM.train_model(model, x_train, y_train, batch_size, epochs, shuffle, validation, ([], []), patience)
+print("Training done.")
\ No newline at end of file
diff --git a/Notebooks/bonifici_RF.ipynb b/Notebooks/bonifici_RF.ipynb
index ef11002..dbee61c 100644
--- a/Notebooks/bonifici_RF.ipynb
+++ b/Notebooks/bonifici_RF.ipynb
@@ -145,227 +145,6 @@
     "x_scaled = min_max_scaler.fit_transform(x)\n",
     "bonifici[[\"Importo\"]] = x_scaled"
    ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 459,
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "# Labels are the values we want to predict\n",
-    "labels = np.array(bonifici['isFraud'])\n",
-    "# Remove the labels from the features\n",
-    "bonifici = bonifici[[\"Importo\", \"NumConfermaSMS\"]]\n",
-    "# Saving feature names for later use\n",
-    "feature_list = [\"Importo\", \"NumConfermaSMS\"]\n",
-    "# Convert to numpy array\n",
-    "features = np.array(bonifici)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 460,
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "train_features, test_features, train_labels, test_labels = train_test_split(features, labels, test_size = 0.25, random_state = 42)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 461,
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Training Features Shape: (362181, 2)\n",
-      "Training Labels Shape: (362181,)\n",
-      "Testing Features Shape: (120727, 2)\n",
-      "Testing Labels Shape: (120727,)\n"
-     ]
-    }
-   ],
-   "source": [
-    "print('Training Features Shape:', train_features.shape)\n",
-    "print('Training Labels Shape:', train_labels.shape)\n",
-    "print('Testing Features Shape:', test_features.shape)\n",
-    "print('Testing Labels Shape:', test_labels.shape)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 462,
-   "metadata": {},
-   "outputs": [],
-   "source": [
-    "# Instantiate model with 1000 decision trees\n",
-    "rf = RandomForestRegressor(n_estimators = 1000, random_state = 42)\n",
-    "# Train the model on training data\n",
-    "rf.fit(train_features, train_labels);"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 463,
-   "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/plain": [
-       "array([0.        , 0.00016463, 0.        , ..., 0.        , 0.00016463,\n",
-       "       0.        ])"
-      ]
-     },
-     "execution_count": 463,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
-   "source": [
-    "rf.predict(test_features)"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": 9,
-   "metadata": {},
-   "outputs": [
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "[array([112., 118.], dtype=float32), array([118., 132.], dtype=float32), array([132., 129.], dtype=float32), array([129., 121.], dtype=float32), array([121., 135.], dtype=float32), array([135., 148.], dtype=float32), array([148., 148.], dtype=float32), array([148., 136.], dtype=float32), array([136., 119.], dtype=float32), array([119., 104.], dtype=float32), array([104., 118.], dtype=float32), array([118., 115.], dtype=float32), array([115., 126.], dtype=float32), array([126., 141.], dtype=float32), array([141., 135.], dtype=float32), array([135., 125.], dtype=float32), array([125., 149.], dtype=float32), array([149., 170.], dtype=float32), array([170., 170.], dtype=float32), array([170., 158.], dtype=float32), array([158., 133.], dtype=float32), array([133., 114.], dtype=float32), array([114., 140.], dtype=float32), array([140., 145.], dtype=float32), array([145., 150.], dtype=float32), array([150., 178.], dtype=float32), array([178., 163.], dtype=float32), array([163., 172.], dtype=float32), array([172., 178.], dtype=float32), array([178., 199.], dtype=float32), array([199., 199.], dtype=float32), array([199., 184.], dtype=float32), array([184., 162.], dtype=float32), array([162., 146.], dtype=float32), array([146., 166.], dtype=float32), array([166., 171.], dtype=float32), array([171., 180.], dtype=float32), array([180., 193.], dtype=float32), array([193., 181.], dtype=float32), array([181., 183.], dtype=float32), array([183., 218.], dtype=float32), array([218., 230.], dtype=float32), array([230., 242.], dtype=float32), array([242., 209.], dtype=float32), array([209., 191.], dtype=float32), array([191., 172.], dtype=float32), array([172., 194.], dtype=float32), array([194., 196.], dtype=float32), array([196., 196.], dtype=float32), array([196., 236.], dtype=float32), array([236., 235.], dtype=float32), array([235., 229.], dtype=float32), array([229., 243.], dtype=float32), array([243., 264.], dtype=float32), array([264., 272.], dtype=float32), array([272., 237.], dtype=float32), array([237., 211.], dtype=float32), array([211., 180.], dtype=float32), array([180., 201.], dtype=float32), array([201., 204.], dtype=float32), array([204., 188.], dtype=float32), array([188., 235.], dtype=float32), array([235., 227.], dtype=float32), array([227., 234.], dtype=float32), array([234., 264.], dtype=float32), array([264., 302.], dtype=float32), array([302., 293.], dtype=float32), array([293., 259.], dtype=float32), array([259., 229.], dtype=float32), array([229., 203.], dtype=float32), array([203., 229.], dtype=float32), array([229., 242.], dtype=float32), array([242., 233.], dtype=float32), array([233., 267.], dtype=float32), array([267., 269.], dtype=float32), array([269., 270.], dtype=float32), array([270., 315.], dtype=float32), array([315., 364.], dtype=float32), array([364., 347.], dtype=float32), array([347., 312.], dtype=float32), array([312., 274.], dtype=float32), array([274., 237.], dtype=float32), array([237., 278.], dtype=float32), array([278., 284.], dtype=float32), array([284., 277.], dtype=float32), array([277., 317.], dtype=float32), array([317., 313.], dtype=float32), array([313., 318.], dtype=float32), array([318., 374.], dtype=float32), array([374., 413.], dtype=float32), array([413., 405.], dtype=float32), array([405., 355.], dtype=float32), array([355., 306.], dtype=float32)]\n",
-      "---------------\n",
-      "[132.0, 129.0, 121.0, 135.0, 148.0, 148.0, 136.0, 119.0, 104.0, 118.0, 115.0, 126.0, 141.0, 135.0, 125.0, 149.0, 170.0, 170.0, 158.0, 133.0, 114.0, 140.0, 145.0, 150.0, 178.0, 163.0, 172.0, 178.0, 199.0, 199.0, 184.0, 162.0, 146.0, 166.0, 171.0, 180.0, 193.0, 181.0, 183.0, 218.0, 230.0, 242.0, 209.0, 191.0, 172.0, 194.0, 196.0, 196.0, 236.0, 235.0, 229.0, 243.0, 264.0, 272.0, 237.0, 211.0, 180.0, 201.0, 204.0, 188.0, 235.0, 227.0, 234.0, 264.0, 302.0, 293.0, 259.0, 229.0, 203.0, 229.0, 242.0, 233.0, 267.0, 269.0, 270.0, 315.0, 364.0, 347.0, 312.0, 274.0, 237.0, 278.0, 284.0, 277.0, 317.0, 313.0, 318.0, 374.0, 413.0, 405.0, 355.0, 306.0, 271.0]\n",
-      "[array([315., 301.], dtype=float32), array([301., 356.], dtype=float32), array([356., 348.], dtype=float32), array([348., 355.], dtype=float32), array([355., 422.], dtype=float32), array([422., 465.], dtype=float32), array([465., 467.], dtype=float32), array([467., 404.], dtype=float32), array([404., 347.], dtype=float32), array([347., 305.], dtype=float32), array([305., 336.], dtype=float32), array([336., 340.], dtype=float32), array([340., 318.], dtype=float32), array([318., 362.], dtype=float32), array([362., 348.], dtype=float32), array([348., 363.], dtype=float32), array([363., 435.], dtype=float32), array([435., 491.], dtype=float32), array([491., 505.], dtype=float32), array([505., 404.], dtype=float32), array([404., 359.], dtype=float32), array([359., 310.], dtype=float32), array([310., 337.], dtype=float32), array([337., 360.], dtype=float32), array([360., 342.], dtype=float32), array([342., 406.], dtype=float32), array([406., 396.], dtype=float32), array([396., 420.], dtype=float32), array([420., 472.], dtype=float32), array([472., 548.], dtype=float32), array([548., 559.], dtype=float32), array([559., 463.], dtype=float32), array([463., 407.], dtype=float32), array([407., 362.], dtype=float32), array([362., 405.], dtype=float32), array([405., 417.], dtype=float32), array([417., 391.], dtype=float32), array([391., 419.], dtype=float32), array([419., 461.], dtype=float32), array([461., 472.], dtype=float32), array([472., 535.], dtype=float32), array([535., 622.], dtype=float32), array([622., 606.], dtype=float32), array([606., 508.], dtype=float32), array([508., 461.], dtype=float32)]\n",
-      "---------------\n",
-      "[356.0, 348.0, 355.0, 422.0, 465.0, 467.0, 404.0, 347.0, 305.0, 336.0, 340.0, 318.0, 362.0, 348.0, 363.0, 435.0, 491.0, 505.0, 404.0, 359.0, 310.0, 337.0, 360.0, 342.0, 406.0, 396.0, 420.0, 472.0, 548.0, 559.0, 463.0, 407.0, 362.0, 405.0, 417.0, 391.0, 419.0, 461.0, 472.0, 535.0, 622.0, 606.0, 508.0, 461.0, 390.0]\n"
-     ]
-    }
-   ],
-   "source": [
-    "# LSTM for international airline passengers problem with time step regression framing\n",
-    "import numpy\n",
-    "import matplotlib.pyplot as plt\n",
-    "from pandas import read_csv\n",
-    "import math\n",
-    "from sklearn.preprocessing import MinMaxScaler\n",
-    "from sklearn.metrics import mean_squared_error\n",
-    "\n",
-    "\n",
-    "# convert an array of values into a dataset matrix\n",
-    "def create_dataset(dataset, look_back=1):\n",
-    "    dataX, dataY = [], []\n",
-    "    for i in range(len(dataset)-look_back-1):\n",
-    "        a = dataset[i:(i+look_back), 0]\n",
-    "        dataX.append(a)\n",
-    "        dataY.append(dataset[i + look_back, 0])\n",
-    "    print(dataX)\n",
-    "    print(\"---------------\")\n",
-    "    print(dataY)\n",
-    "    return numpy.array(dataX), numpy.array(dataY)\n",
-    "\n",
-    "\n",
-    "# fix random seed for reproducibility\n",
-    "numpy.random.seed(7)\n",
-    "# load the dataset\n",
-    "dataframe = read_csv('datasets/airline-passengers.csv', usecols=[1], engine='python')\n",
-    "dataset = dataframe.values\n",
-    "dataset = dataset.astype('float32')\n",
-    "# normalize the dataset\n",
-    "# split into train and test sets\n",
-    "train_size = int(len(dataset) * 0.67)\n",
-    "test_size = len(dataset) - train_size\n",
-    "train, test = dataset[0:train_size,:], dataset[train_size:len(dataset),:]\n",
-    "# reshape into X=t and Y=t+1\n",
-    "look_back = 2\n",
-    "trainX, trainY = create_dataset(train, look_back)\n",
-    "testX, testY = create_dataset(test, look_back)\n",
-    "# reshape input to be [samples, time steps, features]\n",
-    "trainX = numpy.reshape(trainX, (trainX.shape[0], trainX.shape[1], 1))\n",
-    "testX = numpy.reshape(testX, (testX.shape[0], testX.shape[1], 1))"
-   ]
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {
-    "collapsed": true
-   },
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
-  },
-  {
-   "cell_type": "code",
-   "execution_count": null,
-   "metadata": {},
-   "outputs": [],
-   "source": []
   }
  ],
  "metadata": {
diff --git a/feature_engineering.py b/feature_engineering.py
new file mode 100644
index 0000000..7313295
--- /dev/null
+++ b/feature_engineering.py
@@ -0,0 +1,75 @@
+import pandas as pd
+import numpy as np
+from sklearn import preprocessing
+import seaborn as sns
+import matplotlib.pyplot as plt
+# seaborn can generate several warnings, we ignore them
+import warnings
+from sklearn.model_selection import train_test_split
+from models import LSTM
+import config as cfg
+from sklearn.metrics import f1_score
+from sklearn.metrics import roc_curve
+from sklearn.metrics import roc_auc_score
+from sklearn.metrics import precision_recall_curve
+from sklearn.model_selection import RandomizedSearchCV
+
+# in order to print all the columns
+pd.set_option('display.max_columns', 100)
+sns.set(style="white", color_codes=True)
+sns.set_context(rc={"font.family":'sans',"font.size":24,"axes.titlesize":24,"axes.labelsize":24})
+warnings.filterwarnings("ignore")
+
+# -----------------------------------------------------------------------------------------------
+
+# -------------------------- Feature engineering module -----------------------------------------
+
+# -----------------------------------------------------------------------------------------------
+
+# reading the datasets
+bonifici = pd.read_csv("datasets/quiubi_bonifici.csv")
+segnalaz = pd.read_csv("datasets/bonifici_segnalaz.csv")
+bonifici.set_index('indice',inplace=True)
+segnalaz.set_index('indice',inplace=True)
+
+# dropping columns with useless data
+useless_features = ["CAP", "Servizio", "Status", "Paese", "Provincia", "Nazione", "IDTransazione", "CRO", "Causale", "Valuta", "ProfSicurezza", "NumConto", "ABI", "CAB", "Intestatario", "Indirizzo"]
+bonifici = bonifici.drop(useless_features, axis=1)
+segnalaz = segnalaz.drop(useless_features, axis=1)
+bonifici = bonifici.drop(["MsgErrore", "Nominativo", "TipoOperazione"], axis=1)
+segnalaz = segnalaz.drop(["MsgErrore", "Nominativo", "TipoOperazione"], axis=1)
+
+# datasets merge into bonifici
+bonifici["isFraud"] = np.zeros(len(bonifici.index))
+for index, row in segnalaz.iterrows():
+    if index in bonifici.index:
+        bonifici.loc[index, "isFraud"] = 1
+    else:
+        # print(index)
+        bonifici.append(row)
+bonifici["isFraud"] = pd.to_numeric(bonifici["isFraud"], downcast='integer')
+
+bonifici.Timestamp = pd.to_datetime(bonifici.Timestamp)
+bonifici.NumConfermaSMS = bonifici.NumConfermaSMS.eq('Si').astype(int)
+
+# rescaling "Importo"
+x = bonifici[["Importo"]].to_numpy()
+min_max_scaler = preprocessing.MinMaxScaler()
+x_scaled = min_max_scaler.fit_transform(x)
+bonifici[["Importo"]] = x_scaled
+
+# creating "isItalianSender" and "isItalianReceiver"
+bonifici.loc[:, "isItalianSender"] = np.ones(len(bonifici.index))
+bonifici.loc[:, "isItalianReceiver"] = np.ones(len(bonifici.index))
+for index, row in bonifici[["CC_ASN", "IBAN_CC"]].iterrows():
+    if row["CC_ASN"][:2] != "IT":
+        bonifici.at[index, "isItalianSender"] = 0
+    if row["IBAN_CC"] != "IT":
+        bonifici.at[index, "isItalianReceiver"] = 0
+bonifici["isItalianSender"] = pd.to_numeric(bonifici["isItalianSender"], downcast='integer')
+bonifici["isItalianReceiver"] = pd.to_numeric(bonifici["isItalianReceiver"], downcast='integer')
+
+
+
+# saving the dataset
+bonifici.to_csv("datasets/bonifici_engineered.csv")
\ No newline at end of file
diff --git a/models/LSTM.py b/models/LSTM.py
index 8db9d7f..dc65a6e 100644
--- a/models/LSTM.py
+++ b/models/LSTM.py
@@ -9,6 +9,9 @@ from keras.callbacks import EarlyStopping, Callback, TensorBoard, ModelCheckpoin
 import keras.backend as K
 import shutil
 import os
+import wandb
+from wandb.keras import WandbCallback
+wandb.init(project="fraud-detection-thesis")
 
 
 class VanillaLSTM(object):
@@ -55,7 +58,8 @@ def train_model(model, x_train, y_train, batch_size, epochs, shuffle, validation
                                      validation_data=validation_data,
                                      shuffle=shuffle, verbose=2, callbacks=[early_stopping])
     else:
-        history_callback = model.fit(x_train, y_train, epochs=epochs, verbose=2)
+        history_callback = model.fit(x_train, y_train, epochs=epochs, verbose=2, callbacks=[WandbCallback()])
+        model.save(os.path.join(wandb.run.dir, "model.h5"))
     print('Training duration (s) : %s', str(time.time() - training_start_time))
     print("Training Loss per epoch: %s" % str(history_callback.history["loss"]))
     if validation:
